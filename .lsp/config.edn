{:clean {:ns-inner-blocks-indentation :same-line}
 :use-metadata-for-privacy? true
 :auto-add-ns-to-new-files? true
 :cljfmt {:legacy/merge-indents? true
          :alias-map {m meander.epsilon}
          :indents {against-backgroud       [[:block 0]]
                    against-background      [[:inner 0]]
                    as-admin                [[:block 1]]
                    as-customer             [[:block 1]]
                    as-customer-with-lift   [[:block 1]]
                    as-delegate             [[:block 2]]
                    as-delegate-with-lift   [[:block 2]]
                    as-of                   [[:block 1]]
                    assoc                   [[:block 1]]
                    system-map              [[:block 0]]
                    assoc-if                [[:block 1]]
                    assoc-in-if             [[:block 1]]
                    assoc-some              [[:block 1]]
                    assoc-in-some           [[:block 1]]
                    constraint-fn           [[:block 2]]
                    consume!                [[:block 0]]
                    data-fn                 [[:block 1]]
                    defhandler              [[:block 2]]
                    defint                  [[:block 0]]
                    defuf                   [[:block 1]]
                    do-let                  [[:inner 0]]
                    embeds                  [[:block 0]]
                    expand-routes           [[:inner 1]]
                    fact                    [[:block 1]]
                    facts                   [[:block 1]]
                    flow                    [[:block 1]]
                    flow-as-of              [[:block 1]]
                    flow-without-validation [[:block 1]]
                    for-all                 [[:block 1]]
                    future-fact             [[:block 1]]
                    future-facts            [[:block 1]]
                    idempotent-start        [[:block 1]]
                    idempotent-stop         [[:block 1]]
                    ignore-conflict         [[:inner 0]]
                    let-entities            [[:block 2]]
                    let-flow                [[:block 1]]
                    log-messages            [[:block 0]]
                    logged-call             [[:block 1]]
                    mlet                    [[:inner 0]]
                    non-test-action         [[:inner 0]]
                    not-join                [[:block 1]]
                    profile                 [[:block 2]]
                    profiled                [[:block 1]]
                    provided                [[:inner 0]]
                    quick-check             [[:block 1]]
                    rethrow                 [[:block 1]]
                    run-recipe              [[:inner 0]]
                    some-with-open          [[:block 1]]
                    tabular                 [[:inner 0]]
                    try-type                [[:block 0]]
                    with-cid                [[:block 1]]
                    with-fn-validation      [[:block 0]]
                    with-responses          [[:block 0]]
                    with-scopes             [[:block 1]]
                    defglobal-native        [[:inner 0]]
                    defglobal-library       [[:inner 0]]
                    if-expr                 [[:block 1]]
                    let-expr                [[:block 1]]
                    lambda-expr             [[:inner 0]]
                    |defn                   [[:inner 0]]
                    |def-expr               [[:inner 0]]
                    |if                     [[:block 1]]
                    |if-not                 [[:block 1]]
                    |let                    [[:block 1]]
                    |fn                     [[:inner 0]]
                    |with-state             [[:block 1]]
                    |with-state|v2          [[:block 1]]
                    |when                   [[:block 1]]
                    |when-not               [[:block 1]]
                    |when-let               [[:inner 0]]
                    using-config            [[:block 0]]
                    meander.epsilon/find    [[:block 1]]}}}
